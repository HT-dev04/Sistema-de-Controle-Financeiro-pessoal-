1. Java class para fazer a interface grafica
2. Java class para fazer a conexao com o banco de dados
3. Java class para fazer a ligaçao dos dados para o banco de dados
4. Java class para salvar as alteraçoes financeiras
5. Criar o banco de dados (se pa que cada um vai ter que criar o seu, dai quando for escrever o codigo aqui, na parte de colocar o ip do bando de dados, a gente deixa sem nada, quando for pra apresentar tambem,
só pra rodar ele que pode deixar)

Se pá q vai utilizar só essas dai, mas qualquer coisa adiciona mais. Isso é só pra servir de guia pra gente saber o que precisa fazer.

-----------------------------------------------------------------------------------------------------------------------------------------------------------
(Comecei o código e até agr ta assim, CHEIO DE ERRO ESSA MERDA, mas ta ai né. Tem MUITA coisa pra mexer ainda, mas de base é esse o código basico)
ps: esse é o .java da interface

ProjectUI.java

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
 
public class ProjectUI extends JFrame {
    private JTextField data;
    private JTextField desc;
    private JTextArea tipoTransacao;
    private JTextArea valor;
    private TransacaoDAO transacaoDAO;
 
    public ProjectUI(TransacaoDAO transacaoDAO) {
        this.transacaoDAO = transacaoDAO;
 
        setTitle("Controle de Financias");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());
 
     
        descField = new JTextField(15);
        valorField = new JTextField(15);
        dataArea = new JTextArea(10, 30);
        resultadoArea.setEditable(false);
 
    
        JButton consultarButton = new JButton("Consultar");
        JButton inserirButton = new JButton("Inserir");
        JButton alterarButton = new JButton("Alterar");
        JButton excluirButton = new JButton("Excluir");
        JButton confirmarButton = new JButton("Confirmar");
        JButton receitaButton = new JButton("Receita");
        JButton despesaButton = new JButton("Despesa");
    
        add(new JLabel("Data:"));
        add(dataField);
        add(new JLabel("Valor:"));
        add(valorField);
        add(new JLabel("Descrição:"));
        add(descField);
        add(receitaButton);
        add(despesaButton);
        add(consultarButton);
        add(inserirButton);
        add(alterarButton);
        add(excluirButton);
        add(new JScrollPane(resultadoArea));
 
        // Ações dos botões
        consultarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                consultar();
            }
        });
 
        inserirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                inserir();
            }
        });
 
        alterarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
              dataField.setEditable(true);
              descField.setEditable(true);
              valorField.setEditable(true);
              tipotranField.setEditable(true);
                alterarButton.setEnabled(false);
                confirmarButton.setVisible(true);
            }
        });
        
        confirmarButton.addActionListener(new ActionListener(){
            confirmar();
        }
        receitaButton.addActionListener(new ActionListener()){
            receitaSelecionada = (String) receitaComboBox.getSelectedItem();
                salvarReceita();
        
    }        
 
        excluirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                excluir();
            }
        });
 
        setVisible(true);
    }
 
    private void consultar() {
        String nome = data.getText();
        String resultado = transacaoDAO.consultar(nome);
        resultadoArea.setText(resultado);
    }
 
    private void inserir() {
        String nome = nomeField.getText();
        String telefone = telefoneField.getText();
        transacaoDAO.inserir(nome, telefone);
    }
 
    private void alterar() {
        Int data = dataField.getText();
        transacaoDAO.alterar(data, descricao, valor, tipotran);
    }
 
    private void excluir() {
        String nome = nomeField.getText(); 
        transacaoDAO.excluir(nome);
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------
Parte que liga os botoes do codigo no banco de dados com o DAO

TransacaoDAO.java

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
public class TransacaoDAO {
    private Connection conn;
    public TransacaoDAO(Connection conn) {
        this.conn = conn;
    }
 
    public void inserir(String nome, String telefone) {
        String query = "INSERT INTO td_trancoes (descricao, valor, tdata) VALUES (?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, nome);
            stmt.setString(2, telefone);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Dados de transação salvos com sucesso!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir: " + e.getMessage());
        }
    }
 
    public String consultar(String tdate) {
        String query = "SELECT * FROM td_transacoes WHERE nome = ?";
        StringBuilder resultado = new StringBuilder();
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, tdate);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                String valor = rs.getString("valor");
                resultado.append("Data: ").append(tdate).append(", Valor: ").append(valor).append("\n");
            }
            if (resultado.length() == 0) {
                resultado.append("Contato não encontrado.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao consultar: " + e.getMessage());
        }
        return resultado.toString();
    }
 
    public void alterar(String nome, String telefone) {
        String query = "UPDATE td_transacoes SET telefone = ? WHERE nome = ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, telefone);
            stmt.setString(2, nome);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Contato alterado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Contato não encontrado.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar: " + e.getMessage());
        }
    }
 
    public void excluir(String nome) {
        String query = "DELETE FROM td_transacoes WHERE nome = ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, nome);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Contato excluído com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Contato não encontrado.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir: " + e.getMessage());
        }
    }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------
Parte dos métodos do código (main)

ControleFinanceiro.java

import javax.swing.*;
import java.sql.Connection;
 
public class ControleFinanceiro {
    public static void main(String[] args) {
        Connection conn = null;
 
        // Conexão com o banco de dados
        ConectaBanco cb = new ConectaBanco("jdbc:mysql://localhost:xxxx/td_transacoes", "root", "", "com.mysql.cj.jdbc.Driver");
        conn = cb.getConnection();
 
        if (conn != null) {
            TransacaoDAO transacaoDAO = new TransacaoDAO(conn);
            new ProjectUI(transacaoDAO);
        } else {
            JOptionPane.showMessageDialog(null, "Falha ao conectar ao banco de dados.");
        }
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Conecta no banco

ConectaBanco.java

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
 public class ConectaBanco {
     private final String url;
    private final String usuario;
    private final String senha;
    private final String drv;
     public ConectaBanco(String url, String usuario, String senha, String drv) {
        this.url = url;
        this.usuario = usuario;
        this.senha = senha;
        this.drv = drv;
    }
     public Connection getConnection() {
        Connection conexao = null;
        try {
            Class.forName(drv);
            conexao = DriverManager.getConnection(url, usuario, senha);
            System.out.println("Conexão estabelecida com sucesso!");
        } catch (ClassNotFoundException e) {
            System.out.println("Driver não encontrado: " + e.getMessage());
        } catch (SQLException e) {
            System.out.println("Erro ao conectar ao banco de dados: " + e.getMessage());
        }
        return conexao;
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------
